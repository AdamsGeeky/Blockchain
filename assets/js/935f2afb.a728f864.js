"use strict";(self.webpackChunksource=self.webpackChunksource||[]).push([[53],{1109:e=>{e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"category","label":"Resource","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Basics Fundamentals","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Git and Github","href":"/Blockchain/docs/Recources/tutorial-basics/gitgithub","docId":"Recources/tutorial-basics/gitgithub"},{"type":"link","label":"working with Git","href":"/Blockchain/docs/Recources/tutorial-basics/workingwithgit","docId":"Recources/tutorial-basics/workingwithgit"},{"type":"link","label":"Introduction to GitHub","href":"/Blockchain/docs/Recources/tutorial-basics/github","docId":"Recources/tutorial-basics/github"},{"type":"link","label":"Working with Github","href":"/Blockchain/docs/Recources/tutorial-basics/workingwithgithub","docId":"Recources/tutorial-basics/workingwithgithub"},{"type":"link","label":"HTML","href":"/Blockchain/docs/Recources/tutorial-basics/htmlCssJs","docId":"Recources/tutorial-basics/htmlCssJs"},{"type":"link","label":"css","href":"/Blockchain/docs/Recources/tutorial-basics/css","docId":"Recources/tutorial-basics/css"},{"type":"link","label":"programming fundamental","href":"/Blockchain/docs/Recources/tutorial-basics/program","docId":"Recources/tutorial-basics/program"},{"type":"link","label":"Congratulations!","href":"/Blockchain/docs/Recources/tutorial-basics/congratulations","docId":"Recources/tutorial-basics/congratulations"}],"href":"/Blockchain/docs/category/basics-fundamentals"},{"type":"category","label":"Bitcoin Theory","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"The Bitcoin blockchain","href":"/Blockchain/docs/Recources/btheory/intro","docId":"Recources/btheory/intro"},{"type":"link","label":"Peer to peer cash","href":"/Blockchain/docs/Recources/btheory/peer","docId":"Recources/btheory/peer"},{"type":"link","label":"Proof of work (PoW)","href":"/Blockchain/docs/Recources/btheory/proof","docId":"Recources/btheory/proof"},{"type":"link","label":"A timestamp server","href":"/Blockchain/docs/Recources/btheory/time","docId":"Recources/btheory/time"},{"type":"link","label":"The first seen rule","href":"/Blockchain/docs/Recources/btheory/first","docId":"Recources/btheory/first"}],"href":"/Blockchain/docs/category/bitcoin-theory"},{"type":"category","label":"javaScript","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"JavaScript","href":"/Blockchain/docs/Recources/js/intro","docId":"Recources/js/intro"}],"href":"/Blockchain/docs/category/javascript"},{"type":"category","label":"Golang","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"overview","href":"/Blockchain/docs/Recources/golang/introduction","docId":"Recources/golang/introduction"},{"type":"link","label":"why Go was developd ?","href":"/Blockchain/docs/Recources/golang/why","docId":"Recources/golang/why"},{"type":"link","label":"installation and local Dev Enviroment","href":"/Blockchain/docs/Recources/golang/local","docId":"Recources/golang/local"},{"type":"link","label":"Basic Struture of a Go file","href":"/Blockchain/docs/Recources/golang/structure","docId":"Recources/golang/structure"},{"type":"link","label":"Varibles and Constats","href":"/Blockchain/docs/Recources/golang/varibles","docId":"Recources/golang/varibles"},{"type":"link","label":"Data Types","href":"/Blockchain/docs/Recources/golang/datatype","docId":"Recources/golang/datatype"},{"type":"link","label":"Pointer:","href":"/Blockchain/docs/Recources/golang/pointer","docId":"Recources/golang/pointer"},{"type":"link","label":"user input/output","href":"/Blockchain/docs/Recources/golang/inputOutput","docId":"Recources/golang/inputOutput"},{"type":"link","label":"control  statement","href":"/Blockchain/docs/Recources/golang/control","docId":"Recources/golang/control"},{"type":"link","label":"function","href":"/Blockchain/docs/Recources/golang/function","docId":"Recources/golang/function"},{"type":"link","label":"Concurrency","href":"/Blockchain/docs/Recources/golang/concurency","docId":"Recources/golang/concurency"},{"type":"link","label":"Arrays:","href":"/Blockchain/docs/Recources/golang/Array","docId":"Recources/golang/Array"},{"type":"link","label":"Slices:","href":"/Blockchain/docs/Recources/golang/slice","docId":"Recources/golang/slice"},{"type":"link","label":"map","href":"/Blockchain/docs/Recources/golang/map","docId":"Recources/golang/map"},{"type":"link","label":"linkedlist","href":"/Blockchain/docs/Recources/golang/linkedlist","docId":"Recources/golang/linkedlist"},{"type":"link","label":"hashtbl","href":"/Blockchain/docs/Recources/golang/hashtbl","docId":"Recources/golang/hashtbl"}],"href":"/Blockchain/docs/category/golang"}],"href":"/Blockchain/docs/category/resource"}]},"docs":{"Recources/btheory/first":{"id":"Recources/btheory/first","title":"The first seen rule","description":"states that a transaction is considered valid and should be added to the blockchain if it is the first instance of that transaction being broadcast to the network. This rule helps to prevent double spending, as it ensures that a transaction cannot be broadcast multiple times in an attempt to trick the network into thinking it is a valid transaction. The first seen rule is a fundamental part of the Bitcoin protocol and is essential for maintaining the integrity and security of the network.","sidebar":"tutorialSidebar"},"Recources/btheory/intro":{"id":"Recources/btheory/intro","title":"The Bitcoin blockchain","description":"The Bitcoin blockchain is a decentralized, distributed ledger that records all Bitcoin transactions. It is a publicly accessible record of all Bitcoin transactions, including the sender, receiver, and amount of the transaction.","sidebar":"tutorialSidebar"},"Recources/btheory/peer":{"id":"Recources/btheory/peer","title":"Peer to peer cash","description":"is a type of financial transaction that occurs directly between two individuals or parties, without the need for a financial institution or intermediary. This type of transaction allows for the exchange of money or assets without the need for bank accounts, credit cards, or other traditional financial intermediaries.","sidebar":"tutorialSidebar"},"Recources/btheory/proof":{"id":"Recources/btheory/proof","title":"Proof of work (PoW)","description":"is a system used in the Bitcoin network to validate transactions and create new blocks on the blockchain. It requires miners to solve complex mathematical problems in order to verify transactions and add them to the blockchain.","sidebar":"tutorialSidebar"},"Recources/btheory/time":{"id":"Recources/btheory/time","title":"A timestamp server","description":"is a computer or network service that verifies the authenticity and accuracy of timestamps in the Bitcoin network. It helps to ensure that all transactions are recorded in the correct order and that they are not tampered with or altered in any way. Timestamp servers use cryptographic techniques to verify the integrity of the timestamps and to prevent any fraudulent activity.","sidebar":"tutorialSidebar"},"Recources/golang/Array":{"id":"Recources/golang/Array","title":"Arrays:","description":"An array is a fixed-size collection of elements of the same type. The size of the array is set when it is created and cannot be changed. Arrays can be accessed using their index, and they are 0-indexed, meaning that the first element is at index 0.","sidebar":"tutorialSidebar"},"Recources/golang/concurency":{"id":"Recources/golang/concurency","title":"Concurrency","description":"In the context of programming, concurrency is often used to improve the performance and scalability of programs by allowing them to perform multiple tasks simultaneously. For example, a program that performs a long-running computation can use concurrency to also handle user input or network requests while the computation is being performed.","sidebar":"tutorialSidebar"},"Recources/golang/control":{"id":"Recources/golang/control","title":"control  statement","description":"- loops","sidebar":"tutorialSidebar"},"Recources/golang/datatype":{"id":"Recources/golang/datatype","title":"Data Types","description":"Go has several built-in data types, including:","sidebar":"tutorialSidebar"},"Recources/golang/function":{"id":"Recources/golang/function","title":"function","description":"- Functions","sidebar":"tutorialSidebar"},"Recources/golang/hashtbl":{"id":"Recources/golang/hashtbl","title":"hashtbl","description":"A hash table is a data structure that is used to store keys and values. It uses a hash function to map the key to an index in an array, and stores the value at that index.","sidebar":"tutorialSidebar"},"Recources/golang/inputOutput":{"id":"Recources/golang/inputOutput","title":"user input/output","description":"The fmt package in Go provides a variety of functions for formatting and printing text. It is a standard library package, so you can use it without installing any additional dependencies.","sidebar":"tutorialSidebar"},"Recources/golang/introduction":{"id":"Recources/golang/introduction","title":"overview","description":"programming Language developed at Google in 2007","sidebar":"tutorialSidebar"},"Recources/golang/linkedlist":{"id":"Recources/golang/linkedlist","title":"linkedlist","description":"To understand linked lists, it\'s helpful to have a basic understanding of the following concepts:","sidebar":"tutorialSidebar"},"Recources/golang/local":{"id":"Recources/golang/local","title":"installation and local Dev Enviroment","description":"To install Go on your local machine, follow these steps:","sidebar":"tutorialSidebar"},"Recources/golang/map":{"id":"Recources/golang/map","title":"map","description":"Maps:","sidebar":"tutorialSidebar"},"Recources/golang/pointer":{"id":"Recources/golang/pointer","title":"Pointer:","description":"Pointer type in Go is a type that stores the memory address of a value. It is represented by the \\" * \\" symbol followed by the type of the value it points to. For example, a pointer to an integer would be represented as \\"*int\\".","sidebar":"tutorialSidebar"},"Recources/golang/slice":{"id":"Recources/golang/slice","title":"Slices:","description":"A slice is a variable-size collection of elements of the same type. Unlike arrays, slices can be resized and have a capacity, which is the number of elements that can be stored in the slice before it needs to be reallocated.","sidebar":"tutorialSidebar"},"Recources/golang/structure":{"id":"Recources/golang/structure","title":"Basic Struture of a Go file","description":"- first program and file structure","sidebar":"tutorialSidebar"},"Recources/golang/varibles":{"id":"Recources/golang/varibles","title":"Varibles and Constats","description":"In Go, a variable is a storage location that holds a value of a specific type. You can use variables to store values such as numbers, strings, and more.","sidebar":"tutorialSidebar"},"Recources/golang/why":{"id":"Recources/golang/why","title":"why Go was developd ?","description":"the possible Question is you hear another programming language","sidebar":"tutorialSidebar"},"Recources/js/intro":{"id":"Recources/js/intro","title":"JavaScript","description":"JavaScript is a programming language that is commonly used to add interactivity to web pages. It is a client-side language, which means that it is executed by the web browser on the user\'s device, rather than on the server. JavaScript is often used to create things like interactive forms, dynamic menus, and to validate user input. It is a popular choice for building web applications and is supported by all modern web browsers.","sidebar":"tutorialSidebar"},"Recources/tutorial-basics/congratulations":{"id":"Recources/tutorial-basics/congratulations","title":"Congratulations!","description":"","sidebar":"tutorialSidebar"},"Recources/tutorial-basics/css":{"id":"Recources/tutorial-basics/css","title":"css","description":"CSS stands for Cascading Style Sheets. It is a language used to style and layout web pages. It is used in conjunction with HTML to create the look and feel of a website.","sidebar":"tutorialSidebar"},"Recources/tutorial-basics/gitgithub":{"id":"Recources/tutorial-basics/gitgithub","title":"Git and Github","description":"Git is the free and open source distributed version control system that\'s responsible for everything GitHub related that happens locally on your computer.","sidebar":"tutorialSidebar"},"Recources/tutorial-basics/github":{"id":"Recources/tutorial-basics/github","title":"Introduction to GitHub","description":"What is GitHub?:","sidebar":"tutorialSidebar"},"Recources/tutorial-basics/htmlCssJs":{"id":"Recources/tutorial-basics/htmlCssJs","title":"HTML","description":"HTML, or HyperText Markup Language, is a markup language used to create and structure web content.","sidebar":"tutorialSidebar"},"Recources/tutorial-basics/program":{"id":"Recources/tutorial-basics/program","title":"programming fundamental","description":"Basic terminology in Programming","sidebar":"tutorialSidebar"},"Recources/tutorial-basics/workingwithgit":{"id":"Recources/tutorial-basics/workingwithgit","title":"working with Git","description":"if you installed git in your computer","sidebar":"tutorialSidebar"},"Recources/tutorial-basics/workingwithgithub":{"id":"Recources/tutorial-basics/workingwithgithub","title":"Working with Github","description":"","sidebar":"tutorialSidebar"}}}')}}]);